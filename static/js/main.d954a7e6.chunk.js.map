{"version":3,"sources":["logo.svg","TabsPanel.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","SimpleTabs","classes","React","useState","setValue","className","AppBar","position","width","style","background","Tabs","onChange","event","newValue","Tab","label","src","alt","App","logo","href","target","rel","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAe,G,MAAA,IAA0B,kC,sHCSzC,SAASA,EAASC,GACd,IAAQC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EAAnC,YAA6CJ,EAA7C,GAEA,OACE,6CACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,0BAAqBJ,GACvB,uCAA+BA,IAC3BC,GALN,aAOGF,IAAUC,GACT,cAACK,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,UAAaT,SAavB,SAASU,EAAUR,GACjB,MAAO,CACLI,GAAG,cAAD,OAAgBJ,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,gBAAiB,eAKN,SAASC,IACtB,IAAMC,EAAUP,IAChB,EAA0BQ,IAAMC,SAAS,GAAzC,mBAAOnB,EAAP,KAAcoB,EAAd,KAMA,OACE,sBAAKC,UAAWJ,EAAQJ,KAAxB,UACE,cAACS,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,OAAOC,MAAO,CAAEC,WAAY,WAA5D,SACE,eAACC,EAAA,EAAD,CAAM3B,MAAOA,EAAO4B,SAPL,SAACC,EAAOC,GAC3BV,EAASU,IAMuC,aAAW,sBAAvD,UACE,cAACC,EAAA,EAAD,aAAKC,MAAM,SAAYvB,EAAU,KACjC,cAACsB,EAAA,EAAD,aAAKC,MAAM,yBAA4BvB,EAAU,KACjD,cAACsB,EAAA,EAAD,aAAKC,MAAM,SAAYvB,EAAU,KACjC,cAACsB,EAAA,EAAD,aAAKC,MAAM,kBAAqBvB,EAAU,UAI9C,cAACZ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,SACE,wCAEF,eAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,UACE,sCACA,qBAAKgC,IAAI,0BAA0BC,IAAI,qBAEzC,cAACrC,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,mBAGA,cAACJ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,+BC3COkC,MA7Bf,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKY,IAAKG,EAAMf,UAAU,WAAWa,IAAI,SACzC,mBAAGb,UAAU,UAAb,wBAGA,mBAAGA,UAAU,aAAb,iEAGA,mBACEA,UAAU,WACVgB,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,6BASF,qBAAKlB,UAAU,eAAf,SACE,cAACL,EAAD,MAEF,cAACV,EAAA,EAAD,CAAKkC,OAAO,OAAO,mBAAiB,gBClB3BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d954a7e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: \"#21232b\",\r\n      \r\n    },\r\n  }));\r\n  \r\n  export default function SimpleTabs() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"sticky\" width=\"100%\" style={{ background: '#31333d' }}>\r\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n            <Tab label=\"About\" {...a11yProps(0)} />\r\n            <Tab label=\"AWS Blender Resources\" {...a11yProps(1)} />\r\n            <Tab label=\"Chess\" {...a11yProps(2)} />\r\n            <Tab label=\"Other Projects\" {...a11yProps(3)} />\r\n            \r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n          <p>Hello</p>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <p>Hello</p>\r\n          <img src='BlenderAWSRepoImage.jpg' alt=\"Blender Image\"/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n          Chess\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n          Other Projects\r\n        </TabPanel>\r\n      </div>\r\n    );\r\n  }","import logo from './logo.svg';\nimport './App.css';\nimport { Tabs } from '@material-ui/core';\nimport SimpleTabs from './TabsPanel';\nimport Box from '@material-ui/core/Box';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"Account\">\n          Quin Poley\n        </p>\n        <p className=\"BriefAbout\">\n          Cloud, Security, Ml enthusiast | NOT A FRONTEND GUY\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Oooh a link!\n        </a>\n      </header>\n      <div className=\"TabContainer\">\n        <SimpleTabs/>\n      </div>\n      <Box height='100%' background-color=\"#21232b\"/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}